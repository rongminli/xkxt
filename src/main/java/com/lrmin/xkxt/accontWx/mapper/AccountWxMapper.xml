<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.lrmin.xkxt.accontWx.mapper.AccountWxMapper"> 

<resultMap id="BaseResultMap" type="com.lrmin.xkxt.accontWx.entity.AccountWx"> 
	<id column="id" property="id" jdbcType="VARCHAR"/> 
	<result column="create_at" property="createAt" jdbcType="TIMESTAMP"/> 
	<result column="last_update_at" property="lastUpdateAt" jdbcType="TIMESTAMP"/> 
	<result column="version" property="version" jdbcType="INTEGER"/> 
	<result column="open_id" property="openId" jdbcType="VARCHAR"/> 
	<result column="account_id" property="accountId" jdbcType="VARCHAR"/> 
</resultMap> 

<sql id="baseClumList"> id, create_at, last_update_at, version, open_id, account_id  </sql> 

<insert id="insert"> 
	INSERT INTO S_ACCOUNT_WX( <include refid="baseClumList"/> ) VALUES( 
		#{id,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{lastUpdateAt,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR} 
	) 
</insert> 

<insert id="insertSelective"> 
	INSERT INTO S_ACCOUNT_WX
	<trim prefix="(" suffix=")" suffixOverrides="," > 
		<if test="id!= null"> id, </if> 
		<if test="createAt!= null"> create_at, </if> 
		<if test="lastUpdateAt!= null"> last_update_at, </if> 
		<if test="version!= null"> version, </if> 
		<if test="openId!= null"> open_id, </if> 
		<if test="accountId!= null"> account_id, </if> 
	</trim> 
	VALUES 
	<trim prefix="(" suffix=")" suffixOverrides="," > 
		<if test="id!= null"> #{id,jdbcType=VARCHAR}, </if> 
		<if test="createAt!= null"> #{createAt,jdbcType=TIMESTAMP}, </if> 
		<if test="lastUpdateAt!= null"> #{lastUpdateAt,jdbcType=TIMESTAMP}, </if> 
		<if test="version!= null"> #{version,jdbcType=INTEGER}, </if> 
		<if test="openId!= null"> #{openId,jdbcType=VARCHAR}, </if> 
		<if test="accountId!= null"> #{accountId,jdbcType=VARCHAR}, </if> 
	</trim> 
</insert> 

<delete id="deleteById">
	DELETE FROM S_ACCOUNT_WX WHERE id=#{id,jdbcType=VARCHAR}
</delete> 

<update id="update"> 
	UPDATE S_ACCOUNT_WX set id=#{id,jdbcType=VARCHAR},create_at=#{createAt,jdbcType=TIMESTAMP},last_update_at=#{lastUpdateAt,jdbcType=TIMESTAMP},version=#{version,jdbcType=INTEGER},open_id=#{openId,jdbcType=VARCHAR},account_id=#{accountId,jdbcType=VARCHAR} where id=#{id}
</update> 

<update id="updateSelective"> 
	UPDATE S_ACCOUNT_WX set
	<trim prefix="" suffix="" suffixOverrides="," > 
		<if test="id!= null"> id=#{id,jdbcType=VARCHAR}, </if>
		<if test="createAt!= null"> create_at=#{createAt,jdbcType=TIMESTAMP}, </if>
		<if test="lastUpdateAt!= null"> last_update_at=#{lastUpdateAt,jdbcType=TIMESTAMP}, </if>
		<if test="version!= null"> version=#{version,jdbcType=INTEGER}, </if>
		<if test="openId!= null"> open_id=#{openId,jdbcType=VARCHAR}, </if>
		<if test="accountId!= null"> account_id=#{accountId,jdbcType=VARCHAR}, </if>
	</trim>
	where id=#{id}
</update> 

<select id="findAll" resultMap="BaseResultMap">
	select <include refid="baseClumList"/> from S_ACCOUNT_WX
</select> 

<select id="findById" resultMap="BaseResultMap">
	select <include refid="baseClumList"/> from S_ACCOUNT_WX where id=#{id}
</select> 

<select id="findBy" resultMap="BaseResultMap">
	select <include refid="baseClumList"/> from S_ACCOUNT_WX where 1=1
	<trim prefix="" suffix="" suffixOverrides="," > 
		<if test="id!= null"> AND id=#{id,jdbcType=VARCHAR}, </if>
		<if test="createAt!= null"> AND create_at=#{createAt,jdbcType=TIMESTAMP}, </if>
		<if test="lastUpdateAt!= null"> AND last_update_at=#{lastUpdateAt,jdbcType=TIMESTAMP}, </if>
		<if test="version!= null"> AND version=#{version,jdbcType=INTEGER}, </if>
		<if test="openId!= null"> AND open_id=#{openId,jdbcType=VARCHAR}, </if>
		<if test="accountId!= null"> AND account_id=#{accountId,jdbcType=VARCHAR}, </if>
	</trim>
</select> 

<select id="search" resultMap="BaseResultMap">
		select <include refid="baseClumList"/> from T_COURSE
		where 1=1
	</select>
</mapper>